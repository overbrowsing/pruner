function pruner(){let e=Array.from(document.querySelectorAll("[data-pruner]")),r=e=>new Promise((r,t)=>{let o=new Image;o.crossOrigin="anonymous",o.onload=()=>r(o),o.onerror=()=>t(`Failed to load image: ${e}`),o.src=e}),t=(e,r)=>{let t=document.createElement("canvas");return t.width=e,t.height=r,t},o=()=>({width:window.innerWidth,height:window.innerHeight}),n=async(e,o,n,a)=>{let{imageName:l,cols:i,rows:d,tileWidth:u,tileHeight:s,mobileScale:c,imagePath:f,roi:m,imageExtension:g}=JSON.parse(e.getAttribute("data-pruner")||"{}");if(!(i&&d&&u&&s&&f&&l))return console.error("Missing required data attributes.");let h=o&&c?c:1,b=Math.round(u*h),p=Math.round(s*h),E=Math.min(Math.ceil(n/b),i),w=Math.min(Math.ceil(a/p),d),$=t(E*b,w*p),v=$.getContext("2d");v.imageSmoothingEnabled=!1,e.src="";let x=g||"webp",y=Array.from({length:i*d},(e,r)=>`${f}${l}-${r+1}.${x}`),[_,A]=(()=>{if(m){let e=m-1;return[Math.min(Math.max(0,Math.floor(e/i)-Math.floor(w/2)),d-w),Math.min(Math.max(0,e%i-Math.floor(E/2)),i-E)]}return[Math.max(0,Math.floor(d/2)-Math.floor(w/2)),Math.max(0,Math.floor(i/2)-Math.floor(E/2))]})(),L=[];for(let q=0;q<w;q++)for(let I=0;I<E;I++){let S=_+q,W=A+I;S<d&&W<i&&L.push(r(y[S*i+W]))}try{let z=await Promise.all(L);z.forEach((e,r)=>v.drawImage(e,r%E*b,Math.floor(r/E)*p,b,p)),e.src=$.toDataURL("image/WEBP")}catch(B){console.error(B)}},a=debounce(()=>{let{width:r,height:t}=o();e.forEach(e=>{let{mobileBreakpoint:o}=JSON.parse(e.getAttribute("data-pruner")||"{}");n(e,o&&r<=o,r,t)})},200),l=()=>a(),i=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(l(),i.unobserve(e.target))})});window.addEventListener("load",l),e.forEach(e=>i.observe(e)),window.addEventListener("resize",a)}const debounce=(e,r)=>{let t;return(...o)=>{clearTimeout(t),t=setTimeout(()=>e(...o),r)}};window.onload=pruner;