function pruner(){const e=Array.from(document.querySelectorAll("[data-pruner]")),t=e=>new Promise(((t,r)=>{const n=new Image;n.crossOrigin="anonymous",n.onload=()=>t(n),n.onerror=()=>r(`Failed to load image: ${e}`),n.src=e})),r=async(e,r,n,o)=>{const i=JSON.parse(e.getAttribute("data-pruner")||"{}"),{imageName:a,cols:c,rows:s,tileWidth:d,tileHeight:l,mobileScale:h,imagePath:u}=i;if(!(c&&s&&d&&l&&u&&a))return void console.error("Missing required data attributes.");const g=r?h||1.2:1,m=d*g,w=l*g,p=Math.min(Math.ceil(n/m),c),b=Math.min(Math.ceil(o/w),s),f=((e,t)=>{const r=document.createElement("canvas");return r.width=e,r.height=t,r})(p*m,b*w),E=f.getContext("2d");e.src="";const v=Array.from({length:c*s},((e,t)=>`${u}${a} ${t+1}.jpg`));try{const r=[];for(let e=0;e<b;e++)for(let n=0;n<p;n++){const o=e*c+n;o<v.length&&r.push(t(v[o]))}const n=await Promise.all(r);E.clearRect(0,0,f.width,f.height),n.forEach(((e,t)=>{const r=t%p*m,n=Math.floor(t/p)*w;E.drawImage(e,r,n,m,w)})),e.src=f.toDataURL("image/jpeg")}catch(e){console.error(e)}},n=debounce((()=>{const t=window.innerWidth,n=window.innerHeight;e.forEach((e=>{const{mobileBreakpoint:o}=JSON.parse(e.getAttribute("data-pruner")||"{}");r(e,o&&t<=o,t,n)}))}),200),o=()=>{const t=window.innerWidth,n=window.innerHeight;e.forEach((e=>{const{mobileBreakpoint:o}=JSON.parse(e.getAttribute("data-pruner")||"{}");r(e,o&&t<=o,t,n)}))},i=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&(o(),i.unobserve(e.target))}))}));e.forEach((e=>i.observe(e))),window.addEventListener("resize",n),window.addEventListener("load",o)}const debounce=(e,t)=>{let r;return(...n)=>{clearTimeout(r),r=setTimeout((()=>e(...n)),t)}};window.onload=pruner;