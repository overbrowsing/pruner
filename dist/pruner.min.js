function pruner(){var e,r;let o=[...document.querySelectorAll("[data-pruner]")],a={},t=0,n=0,l=e=>a[e]||(a[e]=new Promise((r,o)=>{let a=new Image;a.crossOrigin="anonymous",a.onload=()=>r(a),a.onerror=()=>o(`Failed to load: ${e}`),a.src=e})),i=async(e,r,o,a)=>{let{imageName:t,cols:n,rows:i,mobileScale:s,imagePath:d,roi:c,imageExtension:f="webp"}=JSON.parse(e.dataset.pruner);if(!n||!i||!d||!t)return console.error("Missing parameters.");try{let m=await l(`${d}${t}-1.${f}`),u=m.width,g=m.height,h=r&&s?s:1,p=Math.round(u*h),w=Math.round(g*h),$=Math.min(Math.ceil(o/p),n),E=Math.min(Math.ceil(a/w),i),v=Object.assign(document.createElement("canvas"),{width:$*p,height:E*w}),b=v.getContext("2d");b.imageSmoothingEnabled=!1,e.src="";let _=c?Math.max(0,Math.floor((c-1)/n)-Math.floor(E/2)):Math.max(0,Math.floor(i/2)-Math.floor(E/2)),x=c?Math.max(0,(c-1)%n-Math.floor($/2)):Math.max(0,Math.floor(n/2)-Math.floor($/2)),y=await Promise.all(Array.from({length:E*$},(e,r)=>{let o=_+Math.floor(r/$),a=x+r%$;return o<i&&a<n?l(`${d}${t}-${o*n+a+1}.${f}`):Promise.resolve(null)}));y.forEach((e,r)=>e&&b.drawImage(e,r%$*p,Math.floor(r/$)*w,p,w)),e.src=v.toDataURL("image/webp")}catch(L){console.error(L)}},s=(e=()=>{let e=innerWidth,r=innerHeight;(e!==t||r!==n)&&(t=e,n=r,o.forEach(o=>i(o,e<=(JSON.parse(o.dataset.pruner).mobileBreakpoint||0),e,r)))},(...r)=>{clearTimeout(e.t),e.t=setTimeout(()=>e(...r),200)}),d=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(s(),d.unobserve(e.target))})});window.addEventListener("load",s),o.forEach(e=>d.observe(e)),window.addEventListener("resize",s)}window.onload=pruner;