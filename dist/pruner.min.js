function pruner(){var e;let r=[...document.querySelectorAll("[data-pruner]")],t={},o=e=>t[e]||(t[e]=new Promise((r,t)=>{let o=new Image;o.crossOrigin="anon",o.onload=()=>r(o),o.onerror=()=>t(e),o.src=e})),a=async(e,r,t)=>{let{name:a,tile:l,scale:n="1 0",path:i="",roi:c,imageExtension:s="webp"}=JSON.parse(e.dataset.pruner);if(!l||!a)return;let[d,f]=l.split(" ").map(Number),[h,m]=n.split(" ").map(Number),p=r<=m;try{let{width:u,height:g}=await o(`${i}${a}-1.${s}`),w=Math.round(u*(p?h:1)),E=Math.round(g*(p?h:1)),_=Math.min(Math.ceil(r/w),d),$=Math.min(Math.ceil(t/E),f),v=document.createElement("canvas");v.width=_*w,v.height=$*E;let b=v.getContext("2d");b.imageSmoothingEnabled=!1,e.src="";let y=(e,r,t)=>Math.max(r,Math.min(e,t)),L=y(c?Math.floor((c-1)/d)-Math.floor($/2):Math.floor(f/2)-Math.floor($/2),0,f-$),x=y(c?(c-1)%d-Math.floor(_/2):Math.floor(d/2)-Math.floor(_/2),0,d-_);(await Promise.all(Array($*_).fill().map((e,r)=>{let t=L+Math.floor(r/_),l=x+r%_;return t<f&&l<d?o(`${i}${a}-${t*d+l+1}.${s}`):null}))).forEach((e,r)=>e&&b.drawImage(e,r%_*w,Math.floor(r/_)*E,w,E)),e.src=v.toDataURL("image/webp")}catch(I){}},l,n=0,i=0,c=(e=()=>{let e=innerWidth,t=innerHeight;(e!==n||t!==i)&&(n=e,i=t,r.forEach(r=>a(r,e,t)))},(...r)=>(clearTimeout(l),l=setTimeout(()=>e(...r),200))),s=new IntersectionObserver(e=>e.forEach(e=>e.isIntersecting&&(c(),s.unobserve(e.target))));window.addEventListener("load",c),r.forEach(e=>s.observe(e)),window.addEventListener("resize",c)}window.onload=pruner;