function pruner(){let e=Array.from(document.querySelectorAll("[data-pruner]")),t=e=>new Promise((t,r)=>{let n=new Image;n.crossOrigin="anonymous",n.onload=()=>t(n),n.onerror=()=>r(`Failed to load image: ${e}`),n.src=e}),r=(e,t)=>{let r=document.createElement("canvas");return r.width=e,r.height=t,r},n=async(e,n,a,i)=>{let o=JSON.parse(e.getAttribute("data-pruner")||"{}"),{cols:l,rows:c,tileWidth:d,tileHeight:s,imagePath:u,imageName:g,mobileScale:h}=o;if(!l||!c||!d||!s||!u||!g){console.error("Missing required data attributes.");return}let f=n?h||1.2:1,p=Math.ceil(a/(d*f)),b=Math.ceil(i/(s*f)),E=r(p*d*f,b*s*f),m=E.getContext("2d");e.src="";let w=Array.from({length:l*c},(e,t)=>`${u}${g} ${t+1}.jpg`);try{let $=[];for(let v=0;v<b;v++)for(let y=0;y<p;y++){let A=v*l+y;A<w.length&&$.push(t(w[A]))}let L=await Promise.all($);m.clearRect(0,0,E.width,E.height),L.forEach((e,t)=>{m.drawImage(e,t%p*d*f,Math.floor(t/p)*s*f,d*f,s*f)}),e.src=E.toDataURL("image/jpeg")}catch(_){console.error(_)}},a=debounce(()=>{let t=window.innerWidth,r=window.innerHeight;e.forEach(e=>{let{mobileBreakpoint:a}=JSON.parse(e.getAttribute("data-pruner")||"{}");n(e,a&&t<=a,t,r)})},200),i=()=>{let t=window.innerWidth,r=window.innerHeight;e.forEach(e=>{let{mobileBreakpoint:a}=JSON.parse(e.getAttribute("data-pruner")||"{}");n(e,a&&t<=a,t,r)})},o=new IntersectionObserver(e=>{e.forEach(e=>{e.isIntersecting&&(i(),o.unobserve(e.target))})});e.forEach(e=>o.observe(e)),window.addEventListener("resize",a),window.addEventListener("load",i)}const debounce=(e,t)=>{let r;return(...n)=>{clearTimeout(r),r=setTimeout(()=>e(...n),t)}};window.onload=pruner;