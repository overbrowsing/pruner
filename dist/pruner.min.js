class Pruner{constructor(e){this.elements=document.querySelectorAll(`[${e}]`),this.init()}init(){window.addEventListener("resize",this.handleResize.bind(this)),this.handleResize()}handleResize(){this.elements.forEach((e=>{const a=this.getParams(e);if(!a)return;const{cols:t,rows:r,tileWidth:o,mobileBreakpoint:n,imagePath:l}=a,s=this.generateImageSources(e.id,t*r);window.innerWidth<=n?this.loadMiddleImage(e,s,l):this.loadTiledImages(e,s,t,r,o,l)}))}getParams(e){try{return JSON.parse(e.getAttribute("data-pruner"))}catch(e){return console.error("Invalid data-pruner JSON format:",e),null}}generateImageSources(e,a){return Array.from({length:a},((a,t)=>`${e} ${t+1}.jpg`))}loadMiddleImage(e,a,t){const r=new Image;r.onerror=()=>this.loadFallbackImage(e),r.onload=()=>e.src=r.src,r.src=t+a[Math.floor(a.length/2)]}loadTiledImages(e,a,t,r,o,n){const l=document.createElement("canvas"),s=l.getContext("2d");let i=0,d=0;const c=[];l.width=t*o,a.forEach(((h,g)=>{const m=new Image;m.onerror=()=>this.loadFallbackImage(e),m.onload=()=>{if(c[g]=m,i=Math.max(i,m.height),++d===a.length){l.height=r*i,c.forEach(((e,a)=>{s.drawImage(e,a%t*o,Math.floor(a/t)*i,o,i)}));try{e.src=l.toDataURL()}catch(a){console.error("Canvas tainted, unable to convert to data URL. Falling back to single image."),this.loadFallbackImage(e)}}},m.src=n+h}))}loadFallbackImage(e){const a=new Image;a.src="/assets/before/landscape-desktop.jpg",a.onload=()=>e.src=a.src,a.onerror=()=>console.error("Failed to load fallback image.")}}window.onload=()=>{new Pruner("data-pruner")};