function pruner(){var e;let r=[...document.querySelectorAll("[data-pruner]")],o={},t=e=>o[e]||(o[e]=new Promise((r,o)=>{let t=new Image;t.crossOrigin="anon",t.onload=()=>r(t),t.onerror=()=>o(e),t.src=e})),a=async(e,r,o)=>{let{name:a,tile:n,scale:l="1 0",path:i="",roi:s,imageExtension:c="webp"}=JSON.parse(e.dataset.pruner);if(!n||!a)return;let[d,f]=n.split(" ").map(Number),[m,p]=l.split(" ").map(Number),u=r<=p,{width:h,height:g}=await t(`${i}${a}-1.${c}`),w=Math.round(h*(u?m:1)),E=Math.round(g*(u?m:1)),_=Math.min(Math.ceil(r/w),d),$=Math.min(Math.ceil(o/E),f),v=document.createElement("canvas");v.width=_*w,v.height=$*E;let b=v.getContext("2d");b.imageSmoothingEnabled=!1,e.src="";let L=(e,r,o)=>Math.max(r,Math.min(e,o)),x=L(s?Math.floor((s-1)/d)-Math.floor($/2):Math.floor(f/2)-Math.floor($/2),0,f-$),y=L(s?(s-1)%d-Math.floor(_/2):Math.floor(d/2)-Math.floor(_/2),0,d-_);(await Promise.all(Array($*_).fill().map((e,r)=>{let o=x+Math.floor(r/_),n=y+r%_;return o<f&&n<d?t(`${i}${a}-${o*d+n+1}.${c}`):null}))).forEach((e,r)=>{e&&b.drawImage(e,r%_*w,Math.floor(r/_)*E,w,E)}),e.src=v.toDataURL("image/webp")},n,l=0,i=0,s=(e=()=>{let e=innerWidth,o=innerHeight;(e!==l||o!==i)&&(l=e,i=o,r.forEach(r=>a(r,e,o)))},(...r)=>{clearTimeout(n),n=setTimeout(()=>e(...r),200)}),c=new IntersectionObserver(e=>e.forEach(e=>{e.isIntersecting&&(s(),c.unobserve(e.target))}));window.addEventListener("load",s),r.forEach(e=>c.observe(e)),window.addEventListener("resize",s)}window.onload=pruner;