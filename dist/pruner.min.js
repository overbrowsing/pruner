function pruner(){var e;let r=[...document.querySelectorAll("[data-pruner]")],o={},t=0,a=0,n=e=>o[e]||(o[e]=new Promise((r,o)=>{let t=new Image;t.crossOrigin="anon",t.onload=()=>r(t),t.onerror=()=>o(e),t.src=e})),l=async(e,r,o)=>{let{name:t,tile:a,scale:l="1 0",path:i="",roi:s,imageExtension:c="webp"}=JSON.parse(e.dataset.pruner);if(!a||!t)return;let[m,d]=a.split(" "),[f,h]=l.split(" "),u=r<=+h;try{let{width:g,height:$}=await n(`${i}${t}-1.${c}`),w=Math.round(g*(u?+f:1)),p=Math.round($*(u?+f:1)),E=Math.min(Math.ceil(r/w),m),_=Math.min(Math.ceil(o/p),d),x=document.createElement("canvas");x.width=E*w,x.height=_*p;let v=x.getContext("2d");v.imageSmoothingEnabled=!1,e.src="";let[b,y]=s?[Math.max(0,Math.floor((s-1)/m)-Math.floor(_/2)),Math.max(0,(s-1)%m-Math.floor(E/2))]:[Math.max(0,Math.floor(d/2)-Math.floor(_/2)),Math.max(0,Math.floor(m/2)-Math.floor(E/2))],L=Math.max(0,Math.min(b,d-_)),I=Math.max(0,Math.min(y,m-E)),S=await Promise.all(Array.from({length:_*E},(e,r)=>{let o=L+Math.floor(r/E),a=I+r%E;return o<d&&a<m?n(`${i}${t}-${o*m+a+1}.${c}`):null}));S.forEach((e,r)=>e&&v.drawImage(e,r%E*w,Math.floor(r/E)*p,w,p)),e.src=x.toDataURL("image/webp")}catch(q){}},i,s=(e=()=>{let e=innerWidth,o=innerHeight;(e!==t||o!==a)&&(t=e,a=o,r.forEach(r=>l(r,e,o)))},(...r)=>{clearTimeout(i),i=setTimeout(()=>e(...r),200)}),c=new IntersectionObserver(e=>e.forEach(e=>{e.isIntersecting&&(s(),c.unobserve(e.target))}));window.addEventListener("load",s),r.forEach(e=>c.observe(e)),window.addEventListener("resize",s)}window.onload=pruner;